/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>

/ {
    model = "rable_v2";
    compatible = "rable_v2";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
		zephyr,console = &cdc_acm_uart;
        zmk,kscan = &kscan0;
		zmk,battery = &vbatt;
        zmk,matrix_transform = &default_transform;
		zmk,underglow = &led_strip;
    };

    leds {
        compatible = "gpio-leds";
        blue_led: led_0 {
            gpios = <&gpio0 25 GPIO_ACTIVE_HIGH>;
            label = "Blue LED";
        };
    };

    vbatt: vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "BATTERY";
        io-channels = <&adc 3>;
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 806000)>;
	};

    // Encoder
    encoder_1: encoder_1 {
        compatible = "alps,ec11";
        label = "Encoder 1";
        a-gpios = <&gpio1 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "okay";
    };


    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        row-gpios
            = <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>       // R1
            , <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>       // R2
            , <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>       // R3
            , <&gpio0 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>       // R4
            , <&gpio1 1  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>       // R5
            ;

        col-gpios
            = <&gpio0 30 GPIO_ACTIVE_HIGH >     // C1
            , <&gpio0 31 GPIO_ACTIVE_HIGH >     // C2
            , <&gpio0 28 GPIO_ACTIVE_HIGH >     // C3
            , <&gpio0 2 GPIO_ACTIVE_HIGH >      // C4
            , <&gpio1 11  GPIO_ACTIVE_HIGH >    // C5
            , <&gpio0 3  GPIO_ACTIVE_HIGH >     // C6
            , <&gpio0 22  GPIO_ACTIVE_HIGH >    // C7
            , <&gpio1 3  GPIO_ACTIVE_HIGH >     // C8
            , <&gpio1 0 GPIO_ACTIVE_HIGH >      // C9
            , <&gpio0 19 GPIO_ACTIVE_HIGH >     // C10
            , <&gpio0 21 GPIO_ACTIVE_HIGH >     // C11
            , <&gpio0 23 GPIO_ACTIVE_HIGH >     // C12
            , <&gpio0 12 GPIO_ACTIVE_HIGH >     // C13
            , <&gpio1 9 GPIO_ACTIVE_HIGH >      // C14
            , <&gpio0 7 GPIO_ACTIVE_HIGH >      // C15
            , <&gpio0 29 GPIO_ACTIVE_HIGH >     // C16
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <16>;
        rows = <5>;

        map = <
            RC(0,15) RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(1,13) RC(0,14)  
            RC(1,15) RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(2,13) RC(1,14)
            RC(2,15) RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12)  RC(2,14) 
            RC(3,15) RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13) RC(3,14) 
            RC(4,15) RC(4,0) RC(4,1) RC(4,2) RC(4,6) RC(4,10) RC(4,11) RC(4,12) RC(4,13) RC(4,14) 
        >;
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&usbd {
    status = "okay";
};


&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "mbr";
            reg = <0x00000000 0x00001000>;
        };
        code_partition: partition@1000 {
            label = "code_partition";
            reg = <0x00001000 0x000d3000>;
        };

        storage_partition: partition@d4000 {
            label = "storage";
            reg = <0x000d4000 0x00020000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};

&spi1 {
  compatible = "nordic,nrf-spim";
  status = "okay";
  mosi-pin = <9>;
  // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
  sck-pin = <6>;
  miso-pin = <8>;

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";
    label = "WS2812";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <18>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
    color-mapping = <LED_COLOR_ID_GREEN
                     LED_COLOR_ID_RED
                     LED_COLOR_ID_BLUE>;
  };
};

&usbd {
	status = "okay";
	cdc_acm_uart: cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};
